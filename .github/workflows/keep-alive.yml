name: Supabase Keep-Alive

on:
  # Run every Sunday at 2 AM ChST (UTC+8) = 6 PM UTC (18:00)
  schedule:
    - cron: '0 18 * * 0'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to ping'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    
    steps:
      - name: Verify Environment
        run: |
          echo "üîç Environment Verification:"
          echo "  ‚Ä¢ GitHub Actions: ‚úÖ Running"
          echo "  ‚Ä¢ Runner: ${{ runner.os }}"
          echo "  ‚Ä¢ Node Version: $(node --version 2>/dev/null || echo 'Not available')"
          echo "  ‚Ä¢ Curl Version: $(curl --version | head -n1)"
          echo "  ‚Ä¢ Date/Time: $(date)"
          echo "  ‚Ä¢ Timezone: $(date +%Z)"
          
      - name: Ping Supabase Keep-Alive
        run: |
          echo "üîÑ Pinging Supabase to keep project active..."
          echo "‚è∞ Timestamp: $(date)"
          echo "üåê Environment: ${{ github.event.inputs.environment || 'production' }}"
          
          # Set timeout and retry logic
          MAX_RETRIES=3
          RETRY_COUNT=0
          SUCCESS=false
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ] && [ "$SUCCESS" = false ]; do
            RETRY_COUNT=$((RETRY_COUNT + 1))
            echo "üîÑ Attempt $RETRY_COUNT of $MAX_RETRIES"
            
            # Ping the RSVP endpoint with invalid data to trigger validation logging
            # This counts as activity without upserting any data
            response=$(curl -s -w "\n%{http_code}" -X POST https://pia-ryan-wedding.vercel.app/api/rsvp \
              -H "Content-Type: application/json" \
              -d '{"guest_name": "", "email": "", "attendance": ""}' \
              --max-time 30 \
              --connect-timeout 10 \
              --retry 2 \
              --retry-delay 1)
            
            # Check if curl command succeeded
            curl_exit_code=$?
            if [ $curl_exit_code -ne 0 ]; then
              echo "‚ùå Curl failed with exit code: $curl_exit_code"
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "‚è≥ Waiting 5 seconds before retry..."
                sleep 5
                continue
              else
                echo "üí• All retry attempts failed"
                exit 1
              fi
            fi
            
            # Extract HTTP status code (last line)
            http_code=$(echo "$response" | tail -n1)
            # Extract response body (all lines except last)
            response_body=$(echo "$response" | sed '$d')
            
            echo "üìä HTTP Status: $http_code"
            echo "üìù Response: $response_body"
            
            # Check if the request was successful (should return 400 for validation error)
            if [ "$http_code" -eq 400 ]; then
              echo "‚úÖ Keep-alive ping successful! Supabase activity logged."
              echo "üéØ Expected validation error received - this confirms the endpoint is active."
              SUCCESS=true
            elif [ "$http_code" -eq 200 ]; then
              echo "‚ö†Ô∏è  Unexpected 200 response - endpoint may have changed behavior"
              echo "üîç This might indicate the validation logic has changed"
              SUCCESS=true  # Still consider this a success as the endpoint is responding
            elif [ "$http_code" -eq 000 ]; then
              echo "‚ùå Connection failed (HTTP 000) - possible network issue"
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "‚è≥ Waiting 5 seconds before retry..."
                sleep 5
                continue
              else
                echo "üí• All retry attempts failed"
                exit 1
              fi
            else
              echo "‚ùå Keep-alive ping failed with status: $http_code"
              echo "üîç Response: $response_body"
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "‚è≥ Waiting 5 seconds before retry..."
                sleep 5
                continue
              else
                echo "üí• All retry attempts failed"
                exit 1
              fi
            fi
          done
          
          if [ "$SUCCESS" = true ]; then
            echo "üèÅ Keep-alive process completed successfully!"
          else
            echo "üí• Keep-alive process failed after $MAX_RETRIES attempts"
            exit 1
          fi

      - name: Log Activity Summary
        run: |
          echo "üìà Supabase Keep-Alive Summary:"
          echo "  ‚Ä¢ Endpoint: https://pia-ryan-wedding.vercel.app/api/rsvp"
          echo "  ‚Ä¢ Method: POST with invalid JSON payload"
          echo "  ‚Ä¢ Expected: 400 validation error (confirms activity)"
          echo "  ‚Ä¢ Frequency: Weekly (Sundays at 2 AM ChST)"
          echo "  ‚Ä¢ Purpose: Prevent 7-day Supabase inactivity pause"
          echo "  ‚Ä¢ Last run: $(date)"
          echo "  ‚Ä¢ Status: ‚úÖ SUCCESS"
          
      - name: Notify on Failure
        if: failure()
        run: |
          echo "üö® Keep-Alive Failed!"
          echo "  ‚Ä¢ Check the logs above for details"
          echo "  ‚Ä¢ Verify the endpoint is accessible"
          echo "  ‚Ä¢ Check Vercel deployment status"
          echo "  ‚Ä¢ Consider manual intervention if needed"
